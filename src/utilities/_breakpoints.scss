
//
// Breakpoints
//
// Returns a media query based on the content of $bp.
// $bp: number;             @media (max-width: number)
// $bp: string number;      @media (string: number)
// $bp: number number;      @media (min-width: number) and (max-width: number)
//
// Styleguide 1.1.1
//

@mixin tunic-breakpoint($bp) {
    // Standard 
    $item: map-get($tunic-breakpoints, $bp);
    
    @if $item {
        $bp: $item;
    }

    @if $tunic-ie == true {
        @content;
    } 

    @else {
        @if type-of($bp) == 'number'{
            @media (min-width: #{$bp})  { 
                @content; 
            }
        }

        @if type-of($bp) == 'list'{
            $first:  nth($bp, 1);
            $second: nth($bp, 2);

            @if type-of($first) == 'string'{
                @media (#{$first}: #{$second}) { 
                    @content; 
                }
            }
            @elseif type-of($first) == 'number'{
                @media (min-width: #{$first}) and (max-width: #{$second}) { 
                    @content; 
                }
            }
            @else{
                @warn 'tunic-breakpoint: wrong syntax';
            }
        }
    }
}


//
// Retina Breakpoint
//
// Styleguide 1.1.1
//

@mixin tunic-retina($dpi:2) {
    @media (-webkit-min-device-pixel-ratio: #{$dpi}), (min-resolution: 192dppx) { 
        @content;
    }
}
